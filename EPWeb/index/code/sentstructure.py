# -*- coding: utf-8 -*-
"""SentStructure.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EQEgPVy7Gbuw9qMZgRIV0s_UjC1FJVz8
"""


import spacy
import spacy_conll
import stanza
import pandas as pd

from spacy_conll import ConllFormatter
from spacy_conll import init_parser
from spacy import displacy
from index.code import spaCy_conllu
from pathlib import Path
from svglib.svglib import svg2rlg
from reportlab.graphics import renderPM
from io import BytesIO,StringIO
import base64

#展開樹狀結構
def flatten_tree(tree):
     return ''.join([token.text_with_ws for token in list(tree)]).strip()

def structure(sent):
    #載入模型
    nlp = spacy.load("en_core_web_md")
    doc = nlp(sent)
    print('Sentence ==> ',doc)
    #-----displacy(與Dependency_Image.py相同)-----
    options = {"compact":True,"bg":"#09a3d5","distance":80,"collapse_phrases":True,"add_lemma":False,"fine_grained":True,
         "color": "black", "font":"monospace","offset_x":50, "arrow_spacing":20}
    svg = displacy.render(doc, style='dep', options= options) 
    svgIo = StringIO()
    svgIo.write(svg)
    svgIo.seek(0)
    imgIo = BytesIO()
    drawing = svg2rlg(svgIo)
    renderPM.drawToFile(drawing, imgIo, fmt='PNG')
    imgIo.seek(0)
    imageB64 = str(base64.b64encode(imgIo.read()))[2:-1]
    #-----Flattern Subtree + ConLL-U-----

    conll = {
      'index' : [],
      'Form' : [], 
      'Lemma' : [],
      'POS' : [], 
      'POS_Description' : [], 
      'Linktoindex' : [],
      'Relation' : [], 
      'Relation_Description' : [],
      'tree' : []
    }
    #儲存各詞彙的相關資訊
    i=0
    for token in doc:  
    conll['index'].append(token.i)
    conll['Form'].append(token.text)
    conll['Lemma'].append(token.lemma_)
    conll['POS'].append(f'{token.pos_}({spacy.explain(token.pos_)})') 
    conll['POS_Description'].append(f'{token.tag_}({spacy.explain(token.tag_)})')
    conll['Linktoindex'].append(token.head.i)
    conll['Relation'].append(token.dep_)
    conll['Relation_Description'].append(spacy.explain(token.dep_))
    conll['tree'].append(flatten_tree(token.subtree))
    i=i+1

    data = {
    'sent' : str(doc),
    'displacy' : imageB64,
    'conll' : conll
    }
    print(data)
    return data

